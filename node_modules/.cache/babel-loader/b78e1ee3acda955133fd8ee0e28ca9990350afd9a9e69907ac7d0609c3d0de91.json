{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\najib\\\\Desktop\\\\skip-selection (1)\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from 'react';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  steps\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-step ${step.completed ? 'completed' : ''} ${step.active ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-circle\",\n            children: step.completed ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkmark\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"step-icon\",\n              children: step.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-line ${step.completed ? 'completed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)]\n      }, step.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","steps","className","children","map","step","index","Fragment","completed","active","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","length","id","_c","$RefreshReg$"],"sources":["C:/Users/najib/Desktop/skip-selection (1)/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\nimport './ProgressBar.css';\n\nconst ProgressBar = ({ steps }) => {\n  return (\n    <div className=\"progress-bar\">\n      <div className=\"progress-container\">\n        {steps.map((step, index) => (\n          <React.Fragment key={step.id}>\n            <div className={`progress-step ${step.completed ? 'completed' : ''} ${step.active ? 'active' : ''}`}>\n              <div className=\"step-circle\">\n                {step.completed ? (\n                  <span className=\"checkmark\">âœ“</span>\n                ) : (\n                  <span className=\"step-icon\">{step.icon}</span>\n                )}\n              </div>\n              <span className=\"step-label\">{step.label}</span>\n            </div>\n            {index < steps.length - 1 && (\n              <div className={`progress-line ${step.completed ? 'completed' : ''}`}></div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjC,oBACEF,OAAA;IAAKG,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BJ,OAAA;MAAKG,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBP,OAAA,CAACF,KAAK,CAACU,QAAQ;QAAAJ,QAAA,gBACbJ,OAAA;UAAKG,SAAS,EAAE,iBAAiBG,IAAI,CAACG,SAAS,GAAG,WAAW,GAAG,EAAE,IAAIH,IAAI,CAACI,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAN,QAAA,gBAClGJ,OAAA;YAAKG,SAAS,EAAC,aAAa;YAAAC,QAAA,EACzBE,IAAI,CAACG,SAAS,gBACbT,OAAA;cAAMG,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAC;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,gBAEpCd,OAAA;cAAMG,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEE,IAAI,CAACS;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAC9C;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNd,OAAA;YAAMG,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEE,IAAI,CAACU;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,EACLP,KAAK,GAAGL,KAAK,CAACe,MAAM,GAAG,CAAC,iBACvBjB,OAAA;UAAKG,SAAS,EAAE,iBAAiBG,IAAI,CAACG,SAAS,GAAG,WAAW,GAAG,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC5E;MAAA,GAbkBR,IAAI,CAACY,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcZ,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAxBIlB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}