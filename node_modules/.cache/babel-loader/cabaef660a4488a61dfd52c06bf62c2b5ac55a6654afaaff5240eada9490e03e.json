{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\najib\\\\Desktop\\\\skip-selection (1)\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from 'react';\nimport './ProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  steps\n}) => {\n  const getStepIcon = index => {\n    const icons = ['üìç', 'üóëÔ∏è', 'üì¶', '‚úì', 'üìÖ', 'üí≥'];\n    return icons[index] || '‚Ä¢';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-step ${step.completed ? 'completed' : ''} ${step.active ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-icon\",\n            children: getStepIcon(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-label\",\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-line ${step.completed ? 'completed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","steps","getStepIcon","index","icons","className","children","map","step","Fragment","completed","active","fileName","_jsxFileName","lineNumber","columnNumber","label","length","_c","$RefreshReg$"],"sources":["C:/Users/najib/Desktop/skip-selection (1)/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\nimport './ProgressBar.css';\n\nconst ProgressBar = ({ steps }) => {\n  const getStepIcon = (index) => {\n    const icons = ['üìç', 'üóëÔ∏è', 'üì¶', '‚úì', 'üìÖ', 'üí≥'];\n    return icons[index] || '‚Ä¢';\n  };\n\n  return (\n    <div className=\"progress-bar\">\n      <div className=\"progress-container\">\n        {steps.map((step, index) => (\n          <React.Fragment key={index}>\n            <div className={`progress-step ${step.completed ? 'completed' : ''} ${step.active ? 'active' : ''}`}>\n              <div className=\"step-icon\">\n                {getStepIcon(index)}\n              </div>\n              <span className=\"step-label\">{step.label}</span>\n            </div>\n            {index < steps.length - 1 && (\n              <div className={`progress-line ${step.completed ? 'completed' : ''}`}></div>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IAClD,OAAOA,KAAK,CAACD,KAAK,CAAC,IAAI,GAAG;EAC5B,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BP,OAAA;MAAKM,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChCL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBACrBJ,OAAA,CAACF,KAAK,CAACY,QAAQ;QAAAH,QAAA,gBACbP,OAAA;UAAKM,SAAS,EAAE,iBAAiBG,IAAI,CAACE,SAAS,GAAG,WAAW,GAAG,EAAE,IAAIF,IAAI,CAACG,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAL,QAAA,gBAClGP,OAAA;YAAKM,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBJ,WAAW,CAACC,KAAK;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACNhB,OAAA;YAAMM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEE,IAAI,CAACQ;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,EACLZ,KAAK,GAAGF,KAAK,CAACgB,MAAM,GAAG,CAAC,iBACvBlB,OAAA;UAAKM,SAAS,EAAE,iBAAiBG,IAAI,CAACE,SAAS,GAAG,WAAW,GAAG,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC5E;MAAA,GATkBZ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GAzBIlB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}